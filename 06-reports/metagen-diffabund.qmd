---
title: "Differential abundance"
---

```{r}
#| label: setup
#| include: false
library(here)
library(readr)
library(dplyr)
library(ggplot2)
library(phyloseq)
library(microbiome)
library(ANCOMBC)
taxatable <- read_tsv(here("05-results/metagenomics/post-decontam_taxatable.tsv"))
analysis_metadata <- read_tsv(here("01-documentation/dna-analysis-metadata.tsv"))
experiment_metadata <- read_tsv(here("01-documentation/dna-experiment-metadata.tsv")) %>%
  filter(`#SampleID` %in% analysis_metadata$`#SampleID`)
pca_loadings <- read_tsv(here("05-results/metagenomics/all-pca-loadings.tsv"))
exp_pca_loadings <- read_tsv(here("05-results/metagenomics/experiment-pca-loadings.tsv"))
bac_properties <- read_tsv(here("04-analysis/bacdive/species-properties.tsv"))
byoc_logf_full <- read_tsv(here("05-results/metagenomics/byoc_logf-full.tsv"))
plaque_logf_full <- read_tsv(here("05-results/metagenomics/plaque_logf-full.tsv"))
```

Data are converted to `phyloseq` format. Experiment samples are first run on
their own, and then artificial calculus samples are run together with calculus
and plaque reference samples
(see *02-scripts/DIFF_01_abundance.R*).

## ANCOM-BC

Differential abundance is calculated using the ANCOM-BC method from the `ANCOMBC`
R package [@linANCOMBC2020]. P-values adjusted using the false discovery rate (FDR) method. Samples
grouped by sample type (i.e. saliva, plaque, modern calculus, artificial calculus).

First, differential abundance of experimental samples were calculated,
comparing abundance between donated saliva, medium, and the model calculus.
Then, differential abundance of oral reference samples and model calculus
was calculated.

### Across experiment

```{r}
exp_logf_full <- byoc_logf_full
exp_logf_full %>%
  arrange(desc(abs(lfc))) %>%
  slice_head(n = 20) %>%
  dplyr::select(species, lfc)#, `Oxygen tolerance`, abs)

# highest absolute log-fold changes
exp_logf_full %>% 
  group_by(env) %>% 
  arrange(desc(abs(lfc))) %>%
  slice_head(n = 20) %>% # causes loss of some env values
  ungroup() %>%
  arrange(desc(abs(lfc))) %>%
  slice_head(n = 20) %>% # extract top 20 lfc from modern_calculus
  bind_rows(filter( # recombine with other env values so all are included in plot
    exp_logf_full, 
    env != "saliva",
    species %in% .$species
    )
  ) %>%
  ggplot(aes(x = lfc, y = reorder(species, lfc), col = abn)) +
    geom_point() +
    geom_linerange(aes(xmin = lower, xmax = upper)) +
    geom_vline(xintercept = 0, linetype = "dashed") +
    facet_wrap(~ env)

# top 30 species from PC1
exp_logf_full %>%
  filter(species %in% exp_pca_loadings$species[1:20]) %>% 
  slice_head(n = 60) %>% 
  ggplot(aes(x = lfc, y = reorder(species, lfc), col = abn)) +
    geom_point() +
    geom_linerange(aes(xmin = lower, xmax = upper)) +
    geom_vline(xintercept = 0, linetype = "dashed") +
    facet_wrap(~ env) +  
    theme_bw()

# top 30 species from PC2
exp_logf_full %>%
  filter(species %in% exp_pca_loadings$species[1:20]) %>% 
  slice_head(n = 60) %>% 
  ggplot(aes(x = lfc, y = reorder(species, lfc), col = abn)) +
    geom_point() +
    geom_linerange(aes(xmin = lower, xmax = upper)) +
    geom_vline(xintercept = 0, linetype = "dashed") +
    facet_wrap(~ env) +
    theme_bw()
```

Species with the highest log-fold change mainly see a reduction from saliva to
medium, and then a slight further reduction from medium to calculus. The largest
reduction of species occurs in
`r filter(exp_logf_full, lfc == max(lfc))$species`
(LFC = `r filter(exp_logf_full, lfc == max(lfc))$lfc`).

### Artificial vs. modern calculus

```{r}
head(calc_logf_full)
```

Plots of log-fold change between samples

```{r}
#| label: fig-log-fold-largest
#| fig-cap: "Plot of largest absolute log-fold changes."
calc_logf_full %>%
  group_by(env) %>% 
  arrange(desc(abs(lfc))) %>%
    slice_head(n = 20) %>% # causes loss of some env values
    ungroup() %>%
  slice_head(n = 20) %>% # extract top 20 lfc from modern_calculus
  bind_rows(filter( # recombine with other env values so all are included in plot
    calc_logf_full, 
    env != "modern_calculus",
    species %in% .$species
    )
  ) %>% 
   ggplot(aes(x = lfc, y = reorder(species, lfc), col = abn)) +
    geom_point(size = 2) +
    geom_linerange(aes(xmin = lower, xmax = upper), size = 1) +
    geom_vline(xintercept = 0, linetype = "dashed") +
    facet_wrap(~ env) +
    theme_bw() +
    theme(
      legend.position = "none",
      axis.title.y = element_blank()
          )
```

```{r}
#| label: fig-top30-pc1
#| fig-cap: "Top 30 loadings from PC1."

calc_logf_full %>%
  filter(species %in% pca_loadings$species[1:20]) %>% 
  slice_head(n = 60) %>% # pca_loadings already arranged by PC1
  ggplot(aes(x = lfc, y = reorder(species, lfc), col = abn)) +
    geom_point(size = 2) +
    geom_linerange(aes(xmin = lower, xmax = upper), size = 1) +
    geom_vline(xintercept = 0, linetype = "dashed") +
    facet_wrap(~ env) +
    theme_bw() +
    theme(
      legend.position = "none",
      axis.title.y = element_blank()
          )
```

```{r}
#| label: fig-top30-pc2
#| fig-cap: "Top 30 loadings from PC2."
calc_logf_full %>%
  filter(species %in% arrange(pca_loadings, desc(abs(PC2)))$species[1:20]) %>%
  slice_head(n = 60) %>% # pca_loadings already arranged by PC1
  ggplot(aes(x = lfc, y = reorder(species, lfc), col = abn)) +
    geom_point(size = 2) +
    geom_linerange(aes(xmin = lower, xmax = upper), size = 1) +
    geom_vline(xintercept = 0, linetype = "dashed") +
    facet_wrap(~ env) +
    theme_bw() +
    theme(
      legend.position = "none",
      axis.title.y = element_blank()
          )
```

### Bias-corrected log observed abundances

Bias-corrected log observed abundances were calculated by following the example
in `vignette("ANCOMBC")`.

```{r}
# from vignette("ANCOMBC")
calc_samp_frac <- calculus_da$samp_frac
# Replace NA with 0
calc_samp_frac[is.na(calc_samp_frac)] = 0 
# add 1 to counts for log-transformation
calc_log_exp_otu <- log(microbiome::abundances(calculus_otu) + 1)

# Adjust the log observed abundances
# Bias-corrected (log) observed abundances
calc_log_abn <- t(t(calc_log_exp_otu) - calc_samp_frac) %>%
  as_tibble(rownames = "species")

# need to convert counts back to zero (counts that are = samp_frac)

calc_log_abn
```

# Discussion

*Enterococcus faecalis* has the highest log-fold change, with a higher abundance
in the artificial calculus samples compared to the reference samples and
may represent one of the main differences between artificial calculus and other
reference samples, especially modern calculus, consistent with the results of the
sPCA analysis.
