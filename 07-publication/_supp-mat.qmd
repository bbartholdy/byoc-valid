---
title: "Supplementary Material: Assessing the validity of a calcifying oral biofilm model as a suitable proxy for dental calculus"
#author: "B.P.Bartholdy, I.M.Velsko, S.Gur-Arieh, Z.Fagern√§s, C.Warinner, A.G.Henry" # should use _quarto metadata?
crossref: 
  #fig-prefix: S
  fig-title: Figure S
  #fig-labels: roman
  #labels: arabic
format:
  html: 
    toc: true
    code-fold: true
    output-file: "supplementary-material.html"
    df-print: paged
  pdf: 
    toc: true
    output-file: "supplementary-material.pdf"
    fig-pos: "H"
    knitr: 
      opts_chunk: 
        echo: false
execute: 
  warning: false
knitr: 
  opts_chunk: 
    collapse: true
    warning: false
    fig-path: "figures/supp-"
prefer-html: true
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false
library(here)
library(dplyr)
library(tidyr)
library(forcats)
library(readr)
library(stringi)
library(ggplot2)
library(plotly)
library(cuperdec)
library(patchwork)
library(mixOmics)
knitr::opts_knit$set(root.dir = here())

# upload ftir data

ftir_metadata <- read_tsv(here("01-documentation/ftir-metadata.tsv"))
ftir_data <- read_csv(here("05-results/ftir_full-data.csv"))
ftir_grind_data <- read_csv(here("05-results/ftir_grind-data.csv"))

# upload dna data

dna_metadata <- read_tsv(here("01-documentation/dna-metadata.tsv"))
dna_analysis_metadata <- read_tsv(here("01-documentation/dna-analysis-metadata.tsv"))
dna_experiment_metadata <- read_tsv(here("01-documentation/dna-experiment-metadata.tsv"))
lib_conc <- read_tsv(here("05-results/SYN_DNA_concentrations.tsv"))
software <- read_tsv(here("01-documentation/software_versions.csv"), col_names = c("software", "version"))
bac_properties <- read_tsv(here("04-analysis/bacdive/species-properties.tsv"))
genus_oxytol <- read_tsv(here("04-analysis/bacdive/genus-O2tolerance.tsv"))
list_of_contaminants <- read_tsv(here("04-analysis/decontam/list-of-contaminants.txt"), col_names = F)
otu_decontam <- read_tsv(here("05-results/post-decontam_taxatable.tsv"))
kraken_otu <- read_tsv(here("04-analysis/OTUfilter_table.tsv"))
load(here("05-results/spca_byoc.rda"))
load(here("05-results/spca_species.rda"))
alpha_div <- read_tsv(here("05-results/alpha-diversity.tsv"))
byoc_logf_full <- read_tsv(here("05-results/byoc_logf-full.tsv"))
plaque_logf_full <- read_tsv(here("05-results/plaque_logf-full.tsv"))
sourcetracker2 <- read_tsv(here("04-analysis/sourcetracker/sourcetracker2_output/mixing_proportions.txt"))
all_data_long <- read_tsv(here("04-analysis/sourcetracker/source-comb_long.tsv"))
clr_compar_long <- readr::read_tsv(here("05-results/clr-compar.tsv")) %>%
  pivot_longer(-sample, values_to = "clr_count", names_to = "species")
clr_byoc_long <- readr::read_tsv(here("05-results/clr-byoc.tsv")) %>%
  pivot_longer(-sample, values_to = "clr_count", names_to = "species")
pca_loadings <- readr::read_tsv(here("05-results/all-pca-loadings.tsv"))

source(here("02-scripts/functions.R"))
source(here("02-scripts/99_setup-qmd.R"))
source(here("02-scripts/99_ftir-figures.R"))
source(here("02-scripts/99_metagen-figures.R"))

```

## Samples

Samples taken for DNA sequencing and FTIR analysis. Samples for DNA were collected
from a seperate experimental run than samples for DNA, but experimental conditions
were the same in each. Samples for DNA were medium collected from the bottom of
each well after three days of growth (before medium was refreshed). Samples for
FTIR were taken directly from the biofilm and dried prior to analysis.

### DNA

```{r}
#| label: tbl-byoc-samples
#| tbl-cap: "Table of biofilm samples from this study. Includes which day in the experiment the sample was taken, and sample type (Env)."
dna_experiment_metadata %>% 
  #filter(str_detect(`#SampleID`, "LIB|SYN", negate = F)) %>% 
  select(c(`#SampleID`, day, Env)) %>% 
  arrange(day, Env) %>% 
  knitr::kable()
```

### FTIR

```{r}
#| label: tbl-ftir-samples
#| tbl-cap: "Table of oral reference samples. Includes which day in the experiment the sample was taken, and sample type."
ftir_metadata %>% 
  #filter(str_detect(sample_id, "", negate = T)) %>% 
  select(c(sample_id, day, sample_type)) %>% 
  arrange(day) %>% 
  knitr::kable()
```


## Reference database and sequences

The reference database used in the EAGER pipeline was the Standard Kraken 2 database,
downloaded from <https://genome-idx.s3.amazonaws.com/kraken/k2_standard_20210517.tar.gz>

```sh
wget https://genome-idx.s3.amazonaws.com/kraken/k2_standard_20210517.tar.gz
```

The human reference genome GRCh38 was downloaded on 2022-04-22.

```sh
wget ftp://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh38_latest/refseq_identifiers/GRCh38_latest_genomic.fna.gz
```

```{r}
#| label: tbl-oral-samples
#| tbl-cap: "Table of oral reference samples. Includes sample type (Env), and associated project and study with DOI."
dna_metadata %>% 
  filter(
   str_detect(`#SampleID`, "LIB|SYN", negate = T),
    !Env %in% env_controls
  ) %>% 
  select(!c(SourceSink, download_link, Study)) %>% 
  arrange(Env) %>% 
  knitr::kable()
```

```{r}
#| label: tbl-env-samples
#| tbl-cap: "Table of environmental reference samples (contamination testing). Includes sample type (Env), and associated project and study with DOI."
dna_metadata %>% 
  filter(Env %in% env_controls) %>%
  dplyr::select(!c(SourceSink, download_link, Study)) %>% 
  arrange(Env) %>% 
  knitr::kable()
```


### Pre-processing

```{r}
#| label: tbl-lib-conc
knitr::kable(lib_conc)
```

Processing of the raw DNA reads was conducted using the
`r paste(filter(software, stri_detect(software, fixed = "eager")))`
pipeline [@yatesEAGER2020].
Adapter removal and read merging was performed using
`r paste(filter(software, stri_detect(software, fixed = "adapterremoval", opts_fixed = list("case_insensitive" = TRUE))))`
[@AdapterRemovalv2]. Merged reads were mapped to the human reference genome,
GRCh38, using
`r paste(filter(software, stri_detect(software, fixed = "bwa", opts_fixed = list("case_insensitive" = TRUE))))`
[@BWA] with default settings (-n 0.01; -l 32), and unmapped reads were extracted
using
`r paste(filter(software, stri_detect(software, fixed = "samtools", opts_fixed = list("case_insensitive" = TRUE))))`.

Metagenomic classification was conducted in
`r paste(filter(software, stri_detect(software, fixed = "kraken", opts_fixed = list("case_insensitive" = TRUE))))`
using the Standard database (https://benlangmead.github.io/aws-indexes/k2).

Kraken output reports were combined and converted to OTU tables, and only
species-level assignments were selected for downstream analysis
[02-scripts/00-comb-kraken-reports.R](02-scripts/00-comb-kraken-reports.R).
The OTU tables were further filtered by removing species with relative abundance
lower than 0.001%.

### Authentication

#### SourceTracker2

SourceTracker2 [@knightsSourceTracker2011] was used to estimate source composition
of the oral biofilm model samples using a Bayesian framework. Samples were compared
with oral and environmental controls to detect potential external contamination.

{{< include ../02-scripts/02_authentication-ST2.md >}}

Plots were created of estimated contributions of various sources to the saliva,
model calculus and medium samples. Samples are arranged from left to right by how
late in the experiment they were sampled, with left being the earliest samples
(@fig-sourcetracker2). The output from SourceTracker2 was compared to a dataset
of known oral species (@fig-oral-sources).


{{< embed ../02-scripts/02_metagen-authentication.qmd#fig-sourcetracker2 >}}

Many of the later medium samples were assigned to the 'Unknown' and 'indoor_air'
categories. To see whether this was the result of external
contamination or the presence of oral taxa with an unknown origin (which could be
due to the taxa matching multiple sources), the taxa from 'Unknown' were compared
to the oral reference database from the **cuperdec** R package. Only samples with
a large proportion of oral taxa and a low proportion of indoor_air
(`indoor_air + Unknown < oral` and `oral > 70%`) were included.

{{< embed ../02-scripts/02_metagen-authentication.qmd#fig-oral-sources >}}

A large proportion of the species assigned to the various sources are known to
be oral taxa. The samples do also seem to contain some external contamination.

Based on the results from SourceTracker, samples
`r paste(filter(day_order, rm == T)$'#SampleID', sep = ",")`
were removed from the analysis. The removed samples were all sampled late in
the experiment (day 18+).

Results from SourceTracker indicated a large portion of species from most samples
are from an oral origin (plaque, saliva, or calculus). Some samples contained a
large proportion of species from potential contaminants (indoor air) and of
unknown origin. Potential contaminants were compared to a database of oral
bacteria to see the proportion of known oral species were present in the samples.
Many of the species assigned to `indoor_air` are known oral species
(Figure \@ref(fig:st-plot)).


#### decontam

Potential contaminants were identified using the frequency and prevalence method
in the **decontam** v`r packageVersion("decontam")` [@R-decontam] R package.
[02-scripts/02-authentication.R](../02-scripts/02-authentication.R). Samples
from *indoor_air*, *skin*, and *sediment* were used as negative controls for
the prevalence method with a probability threshold of 0.01. 
[DNA concentrations](../01-documentation/SYN_DNA_concentrations.tsv) were used
for the 'frequency' method with a probability threshold of 0.99
and negative controls.

Putative contaminants were filtered out of the
[OTU tables](../05-results/post-decontam_taxatable.tsv) for all downstream analyses.

See [06-reports/metagen-authentication.Rmd](../06-reports/metagen-authentication.Rmd)
for more details.


```{r}
# replaced by species_table_long in 99_setup-qmd.R
# species_table_long <- otu_decontam %>%
#   pivot_longer(cols = where(is.numeric), names_to = "sample", values_to = "count")

byoc_counts_long <- species_counts_long %>% 
  filter(
    stri_detect(sample, fixed = "SYN"),
    #sample %in% dna_analysis_metadata$`#SampleID`, # does not change dimensions
    count > 0
  )

byoc_species_summ <- byoc_counts_long %>%
  group_by(sample) %>%
  count(sample) %>%
  summarise(count = sum(n))
```

After running `isContaminant()` and filtering out (non-oral) potential contaminants,
the samples contained between
`r paste(range(byoc_species_summ$count), collapse = " and ")`
species with a mean of
`r paste(round(mean(byoc_species_summ$count), 2))` (@fig-species-counts).

{{< embed ../02-scripts/02_metagen-authentication.qmd#fig-species-counts >}}


### Community composition

Genus- and species-level OTU tables were prepared from the decontaminated OTU
table, and relative abundance of species in a sample was calculated as recommended
for compositional data [@gloorMicrobiomeDatasets2017].

```{r}
#| label: species-profiles-setup
#| include: false
# which species had no match on BacDive?
# join species counts and bacterial properties (oxygen tolerance and ABS)
  # genus oxygen tolerance used in cases where no information exists at species level

### already computed in 99_setup-qmd.R ###
# species_properties <- bac_properties %>%
#   right_join(species_counts_long, by = "species") %>%
#   mutate(genus = stri_extract(species, regex = "\\w+")) %>%
#   left_join(
#     rename(genus_oxytol, genus_oxytol = `Oxygen tolerance`), by = "genus"
#     ) %>%
#   mutate(`Oxygen tolerance` = case_when(
#     is.na(`Oxygen tolerance`) ~ genus_oxytol, # if no species-level info available
#     TRUE ~ `Oxygen tolerance`)
#     ) %>%
#   group_by(sample) %>%
#   mutate(
#     abs = if_else(is.na(abs), FALSE, abs), # is ABS species? TRUE/FALSE
#     rel_abund = count / sum(count)
#     ) %>%
#   ungroup()

no_match <- unique(
  filter(species_properties, is.na(`Oxygen tolerance`))$species
)
```

<!-- species profiles -->

Information on the oxygen tolerance of bacterial species was downloaded from 
[BacDive](https://bacdive.dsmz.de) on
`r stri_extract(list.files("../03-data/", pattern = "bacdive"), regex = "\\d{4}-\\d{2}-\\d{2}")`.
A total of **`r length(no_match)`** out of
**`r length(unique(species_counts_long$species))`**
(`r scales::percent(length(no_match) / length(unique(species_counts_long$species)), accuracy = 0.1)`)
species did not have a match on BacDive. These were assigned oxygen tolerance
based on the most common occurrence within the genus they belong.
A list of amylase-binding streptococci (ABS) was created based on
[@nikitkovaStarchBiofilms2013].

<!-- community composition: alpha diversity -->
Alpha-diversity, specifically the Shannon Index, was calculated to compare species
richness and diversity across experimental and comparative oral samples. Shannon
Index was calculated using the R package **vegan** v`r packageVersion("vegan")`
[@Rvegan].

<!-- community composition: beta diversity -->
Sparse principal components analysis (sPCA) was conducted on centered-log-ratio
(CLR) transformed species-level counts using the R package **mixOmics**
v`r packageVersion("mixOmics")` [@RmixOmics]. The **mixOmics** implementation of
sPCA uses a LASSO penalisation to eliminate unimportant variables.
Two separate analyses were conducted: 1) on experiment samples to assess the
difference in sample types and biofilm age; and 2) on oral comparative samples
and biofilm model end-products to explore community differences between *in vitro*
and *in vivo* biofilms.

Loadings obtained from the sPCA analyses were used in combination with
CLR-transformed counts to create heatmaps of species- and genus-level counts
within the experiment and across comparative samples.

<!--Beta-diversity, Bray Curtis dissimilarity.-->


### Alpha-diversity

Days are grouped to increase sample sizes:

- Inoculation (`inoc`) = days 0,3,5
- Treatment (`treatm`) = days 7,9,12,15
- End-product (`final`) = day 24


```{r}
#| label: alpha-div-setup
#| include: false

### already computed in 99_setup-qmd.R ###
# alpha_div_long <- alpha_div %>%
#   pivot_longer(cols = where(is.numeric), names_to = "index") %>%
#   left_join(dna_metadata, by = c("sample" = "#SampleID")) %>%
#   left_join(dna_experiment_metadata, by = c("sample" = "#SampleID", "Env")) %>%
#   mutate(day_grouped = case_when( # group days to increase sample size
#     day < 6 ~ "inoc",
#     day > 6 & day < 24 ~ "treatm",
#     day == 24 ~ "final"),
#     day_grouped = factor(day_grouped, levels = c("inoc", "treatm", "final"))
#     )

# more simplified version of the above. Does it have all needed variables?
  # needs day_grouped
# alpha_div_long <- alpha_div |>
#   pivot_longer(
#     -sample,
#     names_to = "index",
#     values_to = "value"
#     ) |>
#   inner_join(dna_metadata, by = c("sample" = "#SampleID"))

alpha_div_byoc <- filter(alpha_div_long, stri_detect(sample, fixed = "SYN"))

shan_byoc <- filter(alpha_div_byoc, index == "shannon")  # isolate shannon index values
pielou_byoc <- filter(alpha_div_byoc, index == "pilou_even")
richness_byoc <- filter(alpha_div_byoc, index == "richness")

shan_compar <- alpha_div_long %>% 
  filter(index == "shannon") # isolate shannon index values

shan_model <- shan_compar %>%
  filter(Env == "model_calculus" |
           Env == "medium" |
           Env == "vitro_biofilm")
  
shan_oral <- shan_compar %>%
  filter(Env != "model_calculus",
           Env != "medium",
           Env != "vitro_biofilm")

shan_saliva <- alpha_div_long %>%
  filter(Env == "saliva",
         index == "shannon") %>%
  group_by(Study) %>%
  summarise(mean = mean(value, na.rm = T),
            sd = sd(value, na.rm = T))

```


### Within experiment

There was a slight decrease in mean Shannon Index between inoculation
(mean [M] = `r signif(filter(shan_byoc, day_grouped == "inoc")$mean, 3)` $\pm$ `r signif(filter(shan_byoc, day_grouped == "inoc")$sd, 3)`)
and treatment samples
(M = `r signif(filter(shan_byoc, day_grouped == "treatm")$mean, 3)`
$\pm$ `r signif(filter(shan_byoc, day_grouped == "treatm")$sd, 3)`),
followed by a slight increase to model calculus samples
(M = `r signif(filter(shan_byoc, day_grouped == "model")$mean, 3)`
$\pm$ `r signif(filter(shan_byoc, day_grouped == "model")$sd, 3)`),
as well as a decrease in variance within samples types.
The Pielou Evenness Index showed a similar pattern
(M = `r signif(filter(pielou_byoc, day_grouped == "inoc")$mean, 3)`
$\pm$ `r signif(filter(pielou_byoc, day_grouped == "inoc")$sd, 3)`;
M = `r signif(filter(pielou_byoc, day_grouped == "treatm")$mean, 3)`
$\pm$ `r signif(filter(pielou_byoc, day_grouped == "treatm")$sd, 3)`;
M = `r signif(filter(pielou_byoc, day_grouped == "model")$mean, 3)`
$\pm$ `r signif(filter(pielou_byoc, day_grouped == "model")$sd, 3)`),
while number of species increased between the treatment period and the final model
calculus
(M = `r signif(filter(richness_byoc, day_grouped == "inoc")$mean, 3)`
$\pm$ `r signif(filter(richness_byoc, day_grouped == "inoc")$sd, 3)`;
M = `r signif(filter(richness_byoc, day_grouped == "treatm")$mean, 3)`
$\pm$ `r signif(filter(richness_byoc, day_grouped == "treatm")$sd, 3)`;
M = `r signif(filter(richness_byoc, day_grouped == "model")$mean, 3)`
$\pm$ `r signif(filter(richness_byoc, day_grouped == "model")$sd, 3)`).

The model calculus is less variable than the initial and middle biofilm samples.

```{r}
#| label: tbl-alpha-experiment
alpha_summ_byoc
```


```{r}
#| label: fig-alpha-experiment
#| fig-cap: "Plot of alpha-diversity indices across experiment samples grouped by sampling time."

alpha_div_long %>%
  filter(stri_detect(sample, fixed = "SYN")) %>%
  #mutate(day = as.factor(day)) %>%
  ggplot(aes(x = day_grouped, y = value)) +
    geom_violin(aes(col = day_grouped, fill = day_grouped), alpha = 0.5) +
    geom_boxplot(width = 0.12) +
    facet_wrap(~ index, scales = "free_y") +
    theme_bw() +
    theme(
      axis.title = element_blank(),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank()
    )
```

#### Compared to oral reference samples

We used the Shannon Index to compare alpha-diversity in our model to oral
reference samples. The mean Shannon Index of model
samples---medium, model calculus, reference *in vitro* biofilm
(M = `r signif(shan_model$mean[[1]], 3)` $\pm$ `r signif(shan_model$sd[[1]], 3)`;
M = `r signif(shan_model$mean[[2]], 3)` $\pm$ `r signif(shan_model$sd[[2]], 3)`;
M = `r signif(shan_model$mean[[3]], 3)` $\pm$ `r signif(shan_model$sd[[3]], 3)`,
respectively) were consistently lower than the means of oral reference
samples---mucosa,
modern reference dental calculus, saliva, and subgingival and subgingival plaque
(`r paste0("M = ", signif(shan_oral$mean, 3), " ¬± ", signif(shan_oral$sd, 3), collapse = "; ")`).
The Pielou species evenness index has a similar
distribution, although the comparative biofilm samples have a higher mean
than biofilm samples from this study.
Saliva inoculate samples from this study
(M = `r signif(filter(shan_saliva, Study == "this_study")$mean, 3)` $\pm$
`r signif(filter(shan_saliva, Study == "this_study")$sd, 3)`
have a lower mean Shannon index than reference samples
(M = `r signif(filter(shan_saliva, Study == "HMP")$mean, 3)` $\pm$
`r signif(filter(shan_saliva, Study == "HMP")$sd, 3)`),
which may have
contributed to the lower alpha-diversity in model samples compared to reference
samples.

Compared to other oral samples, there is lower species diversity and richness
in the medium and model calculus.


```{r}
#| label: fig-alpha-compar
alpha_div_long %>%
  filter(!Env %in% env_controls) %>%
  mutate(Env = case_when(stri_detect(Env, fixed = "plaque") ~ "plaque",
                         TRUE ~ Env)) %>%
  ggplot(aes(x = Env, y = value)) +
    geom_violin(aes(col = Env, fill = Env), alpha = 0.5) +
    geom_boxplot(width = 0.1) +
    facet_wrap(~ index, scales = "free_y") +
    theme_bw() +
    theme(
      axis.title = element_blank(),
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank()
    )
```

```{r}
#| label: tbl-alpha-all
alpha_div_long %>%
  filter(!Env %in% env_controls) %>%
  group_by(index, Env) %>%
  summarise(
    mean = mean(value),
    sd = sd(value)
  ) %>%
  arrange(desc(mean))
```

### Species profiles

```{r}
#| label: species-properties-plots

# Oxygen tolerance plots
oxy_tol <- species_properties %>%
  distinct(species, .keep_all = T) %>% 
  count(`Oxygen tolerance`) %>%
  mutate(#`Oxygen tolerance` = replace_na(`Oxygen tolerance`, "unknown"),
         perc = scales::percent(n / sum(n), accuracy = 0.1)) %>%
  ggplot(aes(x = "", y = n, fill = `Oxygen tolerance`)) +
    geom_col(colour = "white") + 
    coord_polar(theta = "y") +
    geom_text(aes(label = perc), position = position_stack(vjust = 0.5), col = "white") +
    theme_void() +
    scale_fill_manual(
      values = c(viridisLite::turbo(n = length(levels(as.factor(species_properties$`Oxygen tolerance`)))))
    )

byoc_oxytol <- species_properties %>% 
  filter(stri_detect(sample, fixed = "SYN")) %>% 
  ggplot(aes(y = sample, x = rel_abund, fill = `Oxygen tolerance`)) +
    geom_col() +
    theme_minimal() +
    scale_y_discrete(limits = rev(day_order$`#SampleID`)) +
    scale_fill_manual(
      values = viridisLite::turbo(n = length(levels(as.factor(species_properties$`Oxygen tolerance`))))
      ) +
  theme(
    axis.text.y = element_text(colour = rev(experiment_colours$env_col))
  )

# ABS plots
byoc_abs <- species_properties %>% 
  filter(stri_detect(sample, fixed = "SYN")) %>%
  ggplot(aes(y = sample, x = rel_abund, fill = abs)) +
    geom_col() +
    theme_minimal() +
    scale_y_discrete(limits = rev(day_order$`#SampleID`)) +
    scale_fill_viridis_d(option = "G") +
    theme(
      axis.text.y = element_blank(),
      axis.title = element_blank()
      )
```

```{r}
#| label: fig-byoc-properties
#| fig-cap: "The distribution of oxygen tolerance (left) and ABS (right) in experimental samples."
byoc_oxytol + byoc_abs + plot_layout(guides = "collect")
```

### Species composition

```{r}
#| label: scree-byoc
#| fig-cap: "Scree plot of principal components from the sPCA on experiment samples."
plot(spca_byoc, type = "l")
```

```{r}
#| label: spca-setup
#| include: false
# explained variance
byoc_explain_var <- spca_byoc$prop_expl_var$X # experiment samples
compar_explain_var <- spca_species$prop_expl_var$X # comparative samples

# loadings of samples
byoc_princomp <- spca_byoc$x %>% # experiment samples
  as_tibble(rownames = "sample") %>%
  left_join(experiment_metadata, by = c("sample" = "#SampleID"))
spca_compar <- spca_species$x %>% # comparative samples
  as_tibble(rownames = "sample") %>%
  left_join(metadata, by = c("sample" = "#SampleID"))

# loadings of species
exp_pca_loadings <- spca_byoc$loadings$X %>% # experiment samples
  as_tibble(rownames = "species") %>%
  #left_join(bac_properties, by = "species") %>% 
  left_join(species_properties, by = "species") %>% 
  dplyr::select(species,PC1,PC2, `Oxygen tolerance`) %>%
  arrange(desc(abs(PC1))) %>%
  distinct(species, .keep_all = T)

comp_pca_loadings <- spca_species$rotation %>% # comparative samples
  as_tibble(rownames = "species") %>%
  left_join(species_properties, by = "species") %>% 
  dplyr::select(species,PC1,PC2,PC3,`Oxygen tolerance`) %>%
  arrange(desc(abs(PC1))) %>% 
  distinct(species, .keep_all = T)
#exp_pca_loadings
```


Counts from model biofilm and oral reference samples were transformed with a
centered ratio log-transform and ordered by PC1 loading
(@fig-species-pos1 & @fig-species-neg1).

```{r}
#| label: fig-species-pos1
#| fig-cap: "Centered ratio log-transform abundance of the top 200 species with the highest positive loading on PC1."
#| fig-height: 12
#| fig-width: 9
# top positive loadings on PC1
species_pos_pc1 +
    scale_fill_viridis_c() +
    theme(
      axis.title.y = element_blank(),
      axis.title.x = element_blank(),
      axis.text.x = element_text(
        angle = 90, size = 8, vjust = 0.5, hjust = 1
        ),
      axis.text.y = element_text(face = "italic")
      )
```

```{r}
#| label: fig-species-neg1
#| fig-cap: "Centered ratio log-transform abundance of the top 200 species with the highest negative loading on PC1."
#| fig-height: 12
#| fig-width: 9
# Top negative loadings on PC1
species_neg_pc1 +
  scale_fill_viridis_c() +
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.x = element_text(
      angle = 90, size = 8, vjust = 0.5, hjust = 1
    ),
    axis.text.y = element_text(face = "italic")
  )
```


## FTIR spectra

Select FTIR spectra not shown in the main manuscript (@fig-ftir-spectra).

```{r}
#| label: fig-ftir-spectra
#| layout-ncol: 2
#| fig-height: 2.3
#| fig-cap: "FTIR spectra"
#| fig-subcap: 
#|   - "Day 7"
#|   - "Day 7"
#|   - "Day 12"
#|   - "Day 12"
ftir_spect_plot(ftir_data, "F7.2D1")
ftir_spect_plot(ftir_data, "F7.1A6")
ftir_spect_plot(ftir_data, "F12.1A5+F12.B1")
ftir_spect_plot(ftir_data, "F12.1D1+F12.1D2")


ftir_spect_plot(ftir_data, "F16.1B2")
ftir_spect_plot(ftir_data, "F16.1D6")
ftir_spect_plot(ftir_data, "F20.1A1")
ftir_spect_plot(ftir_data, "F20.1B5")
ftir_spect_plot(ftir_data, "F24.1B3")
ftir_spect_plot(ftir_data, "F24.2A4")
```

::: {.content-visible when-format="pdf"}
Interactive plots are available in the HTML output file.
:::

::: {.content-visible when-format="html:js"}

Interactive plots to explore FTIR spectra.

```{r eval=!knitr::is_latex_output()}
#| label: fig-ftir-int7
ftir_spect_plot(ftir_data, "F7.1A6_b") %>% 
  ggplotly()
```

```{r eval=!knitr::is_latex_output()}
#| label: fig-ftir-int12
ftir_spect_plot(ftir_data, "F12.1A5+F12.B1_B") %>% 
  ggplotly()
```

```{r eval=!knitr::is_latex_output()}
#| label: fig-ftir-int16
 ftir_spect_plot(ftir_data, "F16.1C6") %>% 
  ggplotly()
```

```{r eval=!knitr::is_latex_output()}
#| label: fig-ftir-int24
ftir_spect_plot(ftir_data, "F24.1A3") %>% 
  ggplotly()
```

:::

<!-- host interactive plot somewhere online? -->

## Software versions

### EAGER

Software versions:

```{r}
readr::read_tsv(here("01-documentation/software_versions.csv"), col_names = c("Software", "Version")) %>%
  knitr::kable()
```

### R

#### Session

```{r}
print(sessionInfo(), locale = F)
```

#### Packages

```{r}
#| label: tbl-list-packages
#| tbl-cap: "List of R packages and dependencies."
renv_packages_list <- jsonlite::read_json(here("renv.lock"))
do.call(rbind, renv_packages_list$Packages) %>% 
  as.data.frame() %>%
  select(Package, Version, Source) %>%
  knitr::kable(row.names = F)
```

