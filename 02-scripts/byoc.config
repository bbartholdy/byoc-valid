profiles {
  byoc {
    params {
      config_profile_name = 'BYOC microbiome analysis profile'
      config_profile_description = 'BYOC profile for use on Leiden University ALICE cluster.'
      config_profile_contact = 'Bjorn Peare Bartholdy (@osteobjorn)'

      complexity_filter_poly_g = true
      run_bam_filtering = true
      bam_unmapped_type = 'fastq'
      skip_damage_calculation = true
      skip_qualimap = true
      run_metagenomic_screening = true

    } 
 
    executor {
      queueSize = 4
    
      withName: malt {
        queueSize = 1
      }

    }
    
    process{

      maxRetries = 2

      withName: bwa {
        time = 2.d
      }
      withName: malt {
        cpus = 24
	memory = 1.TB
        time = { check_max( 24.h * task.attempt, 'time' ) }
	queue = 'mem'
      }
      withName: kraken {
	cpus = 24
	memory = 240.GB
	time = { check_max( 4.h * task.attempt, 'time' ) }
      }
    }

    tower {
      enabled = true
      accessToken = 'eyJ0aWQiOiAzOTc1fS40NmZhNzQwODIwYWQ4NmExNTA2YjQyMDE0NjgyMzZlNzljY2Y1ZjZi'
    }
  }
}
// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}


